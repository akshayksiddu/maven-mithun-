pipeline { // pipeline started
agent any
tools {
maven "maven3.8.6"
}
stages { //stages started
// checkout code from git-hub
stage('checkoutcode') {
steps {
sendSlackNotifications("STARTED")
git branch: 'development', credentialsId: '132dc2da-9741-4e05-8baf-e0907ebe745d', url: 'https://github.com/akshayksiddu/maven-mithun-.git'
}
}
// build from maven 
stage('build') {
steps {
sh "mvn clean package"
}
}
// generate a sonarqube report
stage('sonarreport') {
steps {
sh "mvn sonar:sonar"
}
}
// upload a artifact into nexus
stage('artifactintonexus') {
steps {
sh "mvn deploy"
}
}
// deploy into tomcat
stage('tomcat') {
steps {
sshagent(['e1659c8a-de5e-4db2-9cf6-b8fd0adb1a0f']) {
    sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.34.222:/opt/apache-tomcat-9.0.83/webapps/"
}
}
}
} //stages close
post {
  aborted {
  sendSlackNotifications(currentBuild.result)
    // One or more steps need to be included within each condition's block.
  }
  success {
  sendSlackNotifications(currentBuild.result)
    // One or more steps need to be included within each condition's block.
  }
  failure {
  sendSlackNotifications(currentBuild.result)
    // One or more steps need to be included within each condition's block.
  }
}
} //pipline close

//Function for slack notifications

def sendSlackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    colorName = 'ORANGE'
    colorCode = '#FFA500'
  } else if (buildStatus == 'SUCCESS') {
    colorName = 'GREEN'
    colorCode = '#00FF00'
  } else {
    colorName = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
