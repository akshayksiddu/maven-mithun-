node{

try{
    
    def mavenHome = tool name: 'maven3.8.6'
    
    echo "The Job name is: ${env.JOB_NAME}" 
    echo "The Build numebr is: ${env.BUILD_NUMBER}"
    echo "The node name is: ${env.NODE_NAME}"


//Checkout Code State
stage('CheckoutCode'){
sendSlackNotifications("STARTED")
git branch: 'development', credentialsId: '132dc2da-9741-4e05-8baf-e0907ebe745d', url: 'https://github.com/akshayksiddu/maven-mithun-.git'
}

//Build
stage('Build'){
sh "${mavenHome}/bin/mvn clean package"
}

//Execute SonarQube Report
stage('ExecuteSonarQubeReport'){
sh "${mavenHome}/bin/mvn sonar:sonar"
}

//UploadArtifcats Into Nexus
stage('UploadArtifcatsIntoNexus'){
sh "${mavenHome}/bin/mvn deploy"
}

//Deploy App into Tomcat Server
stage('DeployApp'){
 sshagent(['e1659c8a-de5e-4db2-9cf6-b8fd0adb1a0f']) {
    sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.34.222:/opt/apache-tomcat-9.0.68/webapps/"
}
}

}//try closing
catch(e){
currentBuild.result = "FAILURE"
}
finally{
sendSlackNotifications(currentBuild.result)
}

}//node closing

//Function for slack notifications

def sendSlackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    colorName = 'ORANGE'
    colorCode = '#FFA500'
  } else if (buildStatus == 'SUCCESS') {
    colorName = 'deeppink'
    colorCode = '#FF1493'
  } else {
    colorName = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
